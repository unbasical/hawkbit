<!--

    Copyright (c) 2015 Bosch Software Innovations GmbH and others.

    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-parent</artifactId>
      <version>2.1.4.RELEASE</version>
   </parent>

   <groupId>org.eclipse.hawkbit</groupId>
   <artifactId>hawkbit-parent</artifactId>
   <version>0.3.0-SNAPSHOT</version>
   <packaging>pom</packaging>
   <name>hawkBit :: Parent</name>

   <licenses>
      <license>
         <name>Eclipse Public License - Version 1.0</name>
         <url>http://www.eclipse.org/org/documents/epl-v10.php</url>
      </license>
   </licenses>

   <modules>
      <module>hawkbit-core</module>
      <module>hawkbit-security-core</module>
      <module>hawkbit-security-integration</module>
      <module>hawkbit-http-security</module>
      <module>hawkbit-repository</module>
      <module>hawkbit-artifact-repository-filesystem</module>
      <module>hawkbit-autoconfigure</module>
      <module>hawkbit-ui</module>
      <module>hawkbit-rest</module>
      <module>hawkbit-dmf</module>
      <module>hawkbit-test-report</module>
      <module>hawkbit-runtime</module>
      <module>hawkbit-starters</module>
   </modules>

   <scm>
      <connection>${release.scm.connection}</connection>
      <developerConnection>${release.scm.developerConnection}</developerConnection>
      <url>${release.scm.url}</url>
   </scm>

   <ciManagement>
      <system>Jenkins</system>
      <url>https://hudson.eclipse.org/hawkbit/</url>
   </ciManagement>

   <developers>
      <developer>
         <id>kaizimmerm</id>
         <email>kai.zimmermann@microsoft.com</email>
         <organization>Microsoft</organization>
         <organizationUrl>https://www.microsoft.com</organizationUrl>
         <roles>
            <role>Lead</role>
            <role>Committer</role>
         </roles>
      </developer>
      <developer>
         <id>laverman</id>
         <email>Jeroen.Laverman@bosch.io</email>
         <organization>Bosch.IO GmbH</organization>
         <organizationUrl>https://www.bosch.io</organizationUrl>
         <roles>
            <role>Lead</role>
            <role>Committer</role>
         </roles>
      </developer>
      <developer>
         <id>michahirsch</id>
         <roles>
            <role>Committer</role>
         </roles>
      </developer>
      <developer>
         <id>schabdo</id>
         <email>Dominic.Schabel@bosch.io</email>
         <organization>Bosch.IO GmbH</organization>
         <organizationUrl>https://www.bosch.io</organizationUrl>
         <roles>
            <role>Committer</role>
         </roles>
      </developer>
      <developer>
         <id>stefbehl</id>
         <email>Stefan.Behl@bosch.io</email>
         <organization>Bosch.IO GmbH</organization>
         <organizationUrl>https://www.bosch.io</organizationUrl>
         <roles>
            <role>Committer</role>
         </roles>
      </developer>
   </developers>

   <distributionManagement>
      <repository>
         <id>ossrh</id>
         <name>hawkBit Repository - Release</name>
         <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
      </repository>
      <snapshotRepository>
         <id>ossrh</id>
         <name>hawkBit Repository - Snapshots</name>
         <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      </snapshotRepository>
   </distributionManagement>

   <repositories>
      <repository>
         <id>vaadin-addons</id>
         <url>https://maven.vaadin.com/vaadin-addons</url>
      </repository>
   </repositories>

   <properties>
      <java.version>1.8</java.version>
      <spring.boot.version>2.1.4.RELEASE</spring.boot.version>
      <spring.cloud.version>Greenwich.RELEASE</spring.cloud.version>

      <snapshotDependencyAllowed>true</snapshotDependencyAllowed>

      <!-- Spring boot version overrides (should be reviewed with every boot
         upgrade) - START -->
      <!-- Newer versions needed than defined in Boot -->
      <!-- Fixed dependencies -->
      <rabbitmq.http-client.version>2.1.0.RELEASE</rabbitmq.http-client.version>
      <!-- Older versions needed than defined in Boot -->
      <!-- Piggy back existing Eclipse CQs -->
      <commons-lang3.version>3.7</commons-lang3.version>
      <classmate.version>1.3.4</classmate.version>
      <!-- Newer versions (tested 4.5.7) do not seem to work with RabbitMQ management plugin -->
      <httpclient.version>4.5.6</httpclient.version>
      <!-- Spring boot version overrides - END -->

      <!-- Vaadin versions - START -->
      <vaadin.spring.version>1.2.0</vaadin.spring.version>
      <vaadin.spring.addon.version>0.0.6.RELEASE</vaadin.spring.addon.version>
      <vaadin.version>7.7.13</vaadin.version>
      <vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
      <vaadin.addon.vaadin-lazyquerycontainer.version>7.6.1.3</vaadin.addon.vaadin-lazyquerycontainer.version>
      <vaadin.addon.flexibleoptiongroup.version>2.2.0</vaadin.addon.flexibleoptiongroup.version>      
      <vaadin.addon.dbar-addon.version>2.0.0</vaadin.addon.dbar-addon.version>
      <!-- Vaadin versions - END -->

      <maven.processor.plugin.version>3.3.3</maven.processor.plugin.version>
      <maven.scm.plugin.version>1.11.1</maven.scm.plugin.version>

      <!-- Misc libraries versions - START -->
      <cron-utils.version>5.0.5</cron-utils.version>
      <jsoup.version>1.15.3</jsoup.version>
      <allure.version>2.7.0</allure.version>
      <eclipselink.version>2.7.3</eclipselink.version>
      <gwtmockito.version>1.1.8</gwtmockito.version>
      <pl.pragmatists.version>1.0.2</pl.pragmatists.version>
      <guava.version>25.0-jre</guava.version>
      <javax.el-api.version>2.2.4</javax.el-api.version>
      <corn-cps.version>1.1.7</corn-cps.version>
      <jlorem.version>1.1</jlorem.version>
      <commons-io.version>2.5</commons-io.version>
      <rsql-parser.version>2.1.0</rsql-parser.version>
      <awaitility.version>3.1.2</awaitility.version>
      <io-protostuff.version>1.5.6</io-protostuff.version>
      <!-- Misc libraries versions - END -->

      <!-- Release - START -->
      <release.scm.connection>scm:git:git@github.com:eclipse/hawkbit.git</release.scm.connection>
      <release.scm.developerConnection>scm:git:https://github.com/eclipse/hawkbit.git</release.scm.developerConnection>
      <release.scm.url>https://github.com/eclipse/hawkbit.git</release.scm.url>
      <!-- Release - END -->

      <!-- Sonar - START -->
      <sonar.host.url>https://sonar.ops.bosch-iot-rollouts.com</sonar.host.url>
      <sonar.github.repository>eclipse/hawkbit</sonar.github.repository>
      <sonar.links.homepage>https://www.eclipse.org/hawkbit</sonar.links.homepage>
      <sonar.links.ci>https://circleci.com/gh/eclipse/hawkbit</sonar.links.ci>
      <sonar.exclusions>
         **/target/generated-sources/apt/**,**/src/test/**,**/src/main/java/org/eclipse/hawkbit/repository/test/**
      </sonar.exclusions>
      <sonar.coverage.exclusions>
         **/src/main/java/org/eclipse/hawkbit/ui/**,**/target/generated-sources/apt/**,**/src/main/java/org/eclipse/hawkbit/repository/test/**,**/examples/**
      </sonar.coverage.exclusions>
      <jacoco.version>0.8.4</jacoco.version>
      <jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
      <sonar.coverage.jacoco.xmlReportPaths>
         ${project.basedir}/../hawkbit-test-report/target/jacoco-aggregate/jacoco.xml,
         ${project.basedir}/../../hawkbit-test-report/target/jacoco-aggregate/jacoco.xml
      </sonar.coverage.jacoco.xmlReportPaths>

      <!-- Sonar - END -->

      <!-- ************************ -->
      <!-- Maven Surefire settings -->
      <!-- ************************ -->
      <surefire.forkcount>1</surefire.forkcount>
   </properties>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
               <compilerArgument>-Xlint:all</compilerArgument>
               <showWarnings>true</showWarnings>
               <showDeprecation>true</showDeprecation>
            </configuration>
         </plugin>
         <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
               <execution>
                  <!-- Make sure that only non-snapshot versions are used
                     for the dependencies. Only active when property 'snapshotDependencyAllowed'
                     is false. -->
                  <id>enforce-no-snapshots</id>
                  <goals>
                     <goal>enforce</goal>
                  </goals>
                  <configuration>
                     <skip>${snapshotDependencyAllowed}</skip>
                     <rules>
                        <requireReleaseDeps>
                           <message>No Snapshots Allowed!</message>
                        </requireReleaseDeps>
                        <requireReleaseVersion>
                           <message>No Snapshots Allowed!</message>
                        </requireReleaseVersion>
                        <requireMavenVersion>
                           <version>3.5</version>
                        </requireMavenVersion>
                     </rules>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
         </plugin>
         <plugin>
            <artifactId>maven-scm-plugin</artifactId>
            <version>${maven.scm.plugin.version}</version>
            <configuration>
               <tag>${project.version}</tag>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
               <execution>
                  <id>prepare-ut-agent</id>
                  <phase>process-test-classes</phase>
                  <goals>
                     <goal>prepare-agent</goal>
                  </goals>
                  <configuration>
                     <propertyName>jacoco.agent.ut.arg</propertyName>
                  </configuration>
               </execution>
               <execution>
                  <id>prepare-it-agent</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                     <goal>prepare-agent-integration</goal>
                  </goals>
                  <configuration>
                     <propertyName>jacoco.agent.it.arg</propertyName>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
               <execution>
                  <id>attach-sources</id>
                  <goals>
                     <goal>jar</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>

      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-javadoc-plugin</artifactId>
               <configuration>
                  <doclint>syntax</doclint>
               </configuration>
            </plugin>

            <plugin>
               <groupId>com.mycila</groupId>
               <artifactId>license-maven-plugin</artifactId>
               <version>2.11</version>
               <configuration>
                  <header>licenses/LICENSE_HEADER_TEMPLATE_BOSCH_20.txt</header>
                  <validHeaders>
                     <validHeader>licenses/LICENSE_HEADER_TEMPLATE_SIEMENS.txt</validHeader>
                     <validHeader>licenses/LICENSE_HEADER_TEMPLATE_SIEMENS_18.txt</validHeader>
                     <validHeader>licenses/LICENSE_HEADER_TEMPLATE_BOSCH.txt</validHeader>
                     <validHeader>licenses/LICENSE_HEADER_TEMPLATE_BOSCH_18.txt</validHeader>
                     <validHeader>licenses/LICENSE_HEADER_TEMPLATE_BOSCH_19.txt</validHeader>
                     <validHeader>licenses/LICENSE_HEADER_TEMPLATE_MICROSOFT_18.txt</validHeader>
                     <validHeader>licenses/LICENSE_HEADER_TEMPLATE_DEVOLO_19.txt</validHeader>
                     <validHeader>licenses/LICENSE_HEADER_TEMPLATE_KIWIGRID_19.txt</validHeader>
                     <validHeader>licenses/LICENSE_HEADER_TEMPLATE_ENAPTER.txt</validHeader>
                  </validHeaders>
                  <excludes>
                     <exclude>**/banner.txt</exclude>
                     <exclude>**/helm/**</exclude>
                     <exclude>**/README</exclude>
                     <exclude>.3rd-party/**</exclude>
                     <exclude>.github/**</exclude>
                     <exclude>**/.git*</exclude>
                     <exclude>.git*</exclude>
                     <exclude>**/*.sql</exclude>
                     <exclude>eclipse_codeformatter.xml</exclude>
                     <exclude>**/addons.scss</exclude>
                     <exclude>**/VAADIN/widgetsets/**</exclude>
                     <exclude>.sonar</exclude>
                     <exclude>**/Dockerfile</exclude>
                     <exclude>**/docker-compose.yml</exclude>
                     <exclude>**/docker-compose-stack.yml</exclude>
                     <exclude>**/.sonar/**</exclude>
                     <exclude>docs/content/**</exclude>
                     <exclude>docs/layouts/**</exclude>
                     <exclude>docs/static/**</exclude>
                     <exclude>docs/*.toml</exclude>
                     <exclude>**/LICENSE*</exclude>
                  </excludes>
                  <mapping>
                     <scss>JAVADOC_STYLE</scss>
                  </mapping>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.eclipse.m2e</groupId>
               <artifactId>lifecycle-mapping</artifactId>
               <version>1.0.0</version>
               <configuration>
                  <lifecycleMappingMetadata>
                     <pluginExecutions>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.apache.maven.plugins</groupId>
                              <artifactId>maven-dependency-plugin</artifactId>
                              <versionRange>[2.8,)</versionRange>
                              <goals>
                                 <goal>copy-dependencies</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>com.vaadin</groupId>
                              <artifactId>vaadin-maven-plugin</artifactId>
                              <versionRange>[7.3.0,)</versionRange>
                              <goals>
                                 <goal>resources</goal>
                                 <goal>update-widgetset</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore/>
                           </action>
                        </pluginExecution>
                     </pluginExecutions>
                  </lifecycleMappingMetadata>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-surefire-plugin</artifactId>
               <configuration>
                  <systemPropertyVariables>
                     <!-- Set output directory according to allure-framework recommendation -->
                     <allure.results.directory>${project.build.directory}/allure-results</allure.results.directory>
                     <!-- Bugfix for timeout. See https://github.com/allure-framework/allure-maven/issues/59 -->
                     <allure.serve.timeout>650</allure.serve.timeout>
                  </systemPropertyVariables>
                  <!-- Bugfix for OpenJDK 8u181, see https://issues.apache.org/jira/browse/SUREFIRE-1588 -->
                  <useSystemClassLoader>false</useSystemClassLoader>
                  <reuseForks>true</reuseForks>
                  <forkCount>${surefire.forkcount}</forkCount>
                  <argLine>
                     ${jacoco.agent.ut.arg}
                  </argLine>
                  <properties>
                     <property>
                        <name>listener</name>
                        <value>io.qameta.allure.junit4.AllureJunit4</value>
                     </property>
                  </properties>
                  <includes>
                     <include>**/*Tests.java</include>
                     <include>**/*Test.java</include>
                     <include>**/*IT.java</include>
                  </includes>
                  <excludes>
                     <exclude>**/Abstract*.java</exclude>
                  </excludes>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-failsafe-plugin</artifactId>
               <configuration>
                  <reuseForks>false</reuseForks>
                  <forkCount>${surefire.forkcount}</forkCount>
                  <argLine>-Xmx1024m ${jacoco.agent.ut.arg}</argLine>
                  <properties>
                     <property>
                        <name>listener</name>
                        <value>io.qameta.allure.junit4.AllureJunit4</value>
                     </property>
                  </properties>
               </configuration>
               <executions>
                  <execution>
                     <id>integration-test</id>
                     <phase>integration-test</phase>
                     <goals>
                        <goal>integration-test</goal>
                     </goals>
                  </execution>
               </executions>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-site-plugin</artifactId>
               <configuration>
                  <skip>true</skip>
                  <skipDeploy>true</skipDeploy>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.jacoco</groupId>
               <artifactId>jacoco-maven-plugin</artifactId>
               <version>${jacoco.version}</version>
            </plugin>
            <plugin>
               <groupId>org.bsc.maven</groupId>
               <artifactId>maven-processor-plugin</artifactId>
               <version>${maven.processor.plugin.version}</version>
            </plugin>
         </plugins>
      </pluginManagement>
   </build>
   <profiles>
      <profile>
         <id>nexus_staging</id>
         <activation>
            <property>
               <name>!skipNexusStaging</name>
            </property>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <!-- Use the Nexus Staging plugin as a full replacement
                     for the standard Maven Deploy plugin. See https://github.com/sonatype/nexus-maven-plugins/tree/master/staging/maven-plugin
                     why this makes sense :-) We can control whether we want to deploy to the
                     Eclipse repo or Maven Central by a combination of the version being a SNAPSHOT
                     or RELEASE version and property skipNexusStaging=true/false. In any case
                     we can take advantage of the plugin's "deferred deploy" feature which makes
                     sure that all artifacts of a multi-module project are deployed as a whole
                     at the end of the build process instead of deploying each module's artifacts
                     individually as part of building the module. -->
                  <groupId>org.sonatype.plugins</groupId>
                  <artifactId>nexus-staging-maven-plugin</artifactId>
                  <version>1.6.7</version>
                  <extensions>true</extensions>
                  <configuration>
                     <serverId>ossrh</serverId>
                     <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                     <autoReleaseAfterClose>false</autoReleaseAfterClose>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <!-- this profile generates GPG signatures -->
         <id>create_gpg_signature</id>
         <activation>
            <activeByDefault>false</activeByDefault>
            <property>
               <name>createGPGSignature</name>
            </property>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-gpg-plugin</artifactId>
                  <version>1.6</version>
                  <executions>
                     <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                           <goal>sign</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>

   <dependencyManagement>
      <dependencies>
         <!-- Vaadin -->
         <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-bom</artifactId>
            <version>${vaadin.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-spring-boot</artifactId>
            <version>${vaadin.spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.vaadin.spring.addons</groupId>
            <artifactId>vaadin-spring-addon-eventbus</artifactId>
            <version>${vaadin.spring.addon.version}</version>
            <exclusions>
               <exclusion>
                  <groupId>com.vaadin</groupId>
                  <artifactId>vaadin-spring</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.vaadin.spring.extensions</groupId>
            <artifactId>vaadin-spring-ext-security</artifactId>
            <version>${vaadin.spring.addon.version}</version>
            <exclusions>
               <exclusion>
                  <groupId>com.vaadin</groupId>
                  <artifactId>vaadin-spring</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.vaadin.addons.lazyquerycontainer</groupId>
            <artifactId>vaadin-lazyquerycontainer</artifactId>
            <version>${vaadin.addon.vaadin-lazyquerycontainer.version}</version>
            <exclusions>
               <exclusion>
                  <groupId>org.eclipse.persistence</groupId>
                  <artifactId>javax.persistence</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>com.vaadin</groupId>
                  <artifactId>vaadin-client-compiled</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>com.vaadin</groupId>
                  <artifactId>vaadin-themes</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.vaadin.addons</groupId>
            <artifactId>flexibleoptiongroup</artifactId>
            <version>${vaadin.addon.flexibleoptiongroup.version}</version>
         </dependency>
         <dependency>
            <groupId>org.vaadin.alump.distributionbar</groupId>
            <artifactId>dbar-addon</artifactId>
            <version>${vaadin.addon.dbar-addon.version}</version>
         </dependency>

         <!-- Misc -->
         <dependency>
            <groupId>com.rabbitmq</groupId>
            <artifactId>http-client</artifactId>
            <version>${rabbitmq.http-client.version}</version>
         </dependency>
         <dependency>
            <groupId>com.cronutils</groupId>
            <artifactId>cron-utils</artifactId>
            <version>${cron-utils.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
         </dependency>
         <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>${javax.el-api.version}</version>
         </dependency>
         <dependency>
            <groupId>net.sf.corn</groupId>
            <artifactId>corn-cps</artifactId>
            <version>${corn-cps.version}</version>
         </dependency>
         <dependency>
            <groupId>net._01001111</groupId>
            <artifactId>jlorem</artifactId>
            <version>${jlorem.version}</version>
         </dependency>
         <dependency>
            <groupId>com.github.gwtd3</groupId>
            <artifactId>gwt-d3-api</artifactId>
            <version>1.2.0</version>
            <exclusions>
               <exclusion>
                  <groupId>com.google.gwt</groupId>
                  <artifactId>gwt-user</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>junit</groupId>
                  <artifactId>junit</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <!-- Spring -->
         <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>${spring.cloud.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
               <exclusion>
                  <groupId>org.springframework.boot</groupId>
                  <artifactId>spring-boot-starter-tomcat</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>com.fasterxml.jackson.datatype</groupId>
                  <artifactId>jackson-datatype-jdk8</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>com.fasterxml.jackson.datatype</groupId>
                  <artifactId>jackson-datatype-jsr310</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>com.fasterxml.jackson.module</groupId>
                  <artifactId>jackson-module-parameter-names</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <version>${spring.boot.version}</version>
            <scope>provided</scope>
         </dependency>
         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
               <exclusion>
                  <groupId>org.apache.logging.log4j</groupId>
                  <artifactId>log4j-to-slf4j</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
               <exclusion>
                  <groupId>org.hibernate</groupId>
                  <artifactId>hibernate-entitymanager</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>org.hibernate</groupId>
                  <artifactId>hibernate-core</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>org.springframework.boot</groupId>
                  <artifactId>spring-boot-starter-logging</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>javax.xml.bind</groupId>
                  <artifactId>jaxb-api</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa</artifactId>
            <version>${eclipselink.version}</version>
         </dependency>

         <!-- Protostuff Io -->
         <dependency>
            <groupId>io.protostuff</groupId>
            <artifactId>protostuff-core</artifactId>
            <version>${io-protostuff.version}</version>
         </dependency>
         <dependency>
            <groupId>io.protostuff</groupId>
            <artifactId>protostuff-runtime</artifactId>
            <version>${io-protostuff.version}</version>
         </dependency>

         <!-- RSQL / FIQL parser -->
         <dependency>
            <groupId>cz.jirutka.rsql</groupId>
            <artifactId>rsql-parser</artifactId>
            <version>${rsql-parser.version}</version>
         </dependency>
         <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
               <exclusion>
                  <groupId>org.springframework.boot</groupId>
                  <artifactId>spring-boot-starter-logging</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-junit4</artifactId>
            <version>${allure.version}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>${pl.pragmatists.version}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>com.google.gwt.gwtmockito</groupId>
            <artifactId>gwtmockito</artifactId>
            <version>${gwtmockito.version}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit-junit</artifactId>
            <version>${spring-amqp.version}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit-test</artifactId>
            <version>${spring-amqp.version}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
            <!-- https://github.com/google/guava/issues/2824 -->
            <exclusions>
               <exclusion>
                  <groupId>com.google.j2objc</groupId>
                  <artifactId>j2objc-annotations</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>com.google.code.findbugs</groupId>
                  <artifactId>jsr305</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>org.checkerframework</groupId>
                  <artifactId>checker-compat-qual</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>com.google.errorprone</groupId>
                  <artifactId>error_prone_annotations</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>com.google.j2objc</groupId>
                  <artifactId>j2objc-annotations</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>animal-sniffer-annotations</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
         </dependency>
      </dependencies>
   </dependencyManagement>
</project>
